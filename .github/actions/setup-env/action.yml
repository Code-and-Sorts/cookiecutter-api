name: "setup-env"
description: "Composite action to setup the Python and poetry environment."

inputs:
  python-version:
    required: false
    description: "The python version to use"
    default: "3.11"

runs:
  using: "composite"

  steps:
    - name: Set up python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install Poetry
      env:
        POETRY_VERSION: "1.8.3"
      run: curl -sSL https://install.python-poetry.org | python - -y
      shell: bash

    - name: Add Poetry to Path
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      shell: bash

    - name: Configure Poetry virtual environment in project
      run: poetry config virtualenvs.in-project true
      shell: bash

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ inputs.python-version }}-${{ hashFiles('poetry.lock') }}

    - name: Install Cookiecutter
      run: pip install cookiecutter
      shell: bash
    
    - name: Create Cookiecutter Template
      run: |
        cookiecutter . --no-input \
          project_name = "Test Project" \
          project_description = "Test project description" \
          project_slug = "test_project" \
          project_endpoint = "test-project" \
          project_class_name = "TestProject" \
          author = "Colby Timm" \
          cloud_service = "Azure Function App" \
          language = "Python" \
          open_source_license = "MIT license"
      shell: bash

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction
      shell: bash
